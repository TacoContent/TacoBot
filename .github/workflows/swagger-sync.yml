---
name: Swagger Sync Check
on:
  pull_request:
    paths:
      - 'bot/**'
      - '.swagger.v1.yaml'
      - '.github/linters/.swagger-sync.yaml'
      - 'scripts/swagger_sync.py'
  push:
    branches:
      - develop
      - beta*
permissions: {}
jobs:
  swagger-sync:
    runs-on: ubuntu-latest
    permissions:
      issues: write
      pull-requests: write
    steps:
      - name: Checkout
        uses: actions/checkout@v5
        with:
          fetch-depth: 1
          persist-credentials: false

      - name: Set up Python
        uses: actions/setup-python@v6
        with:
          python-version: '3.13'

      - name: Install dependencies (minimal)
        run: |
          python -m pip install --upgrade pip
          pip install -e ".[dev,docs]"

      - name: Create reports directory
        run: |
          mkdir -p reports/openapi/

      - name: Swagger Sync check
        run: |
          python scripts/swagger_sync.py \
            --config=.swagger-sync.yaml \
            --env=ci

      - name: Check output directory
        run: |
          ls -la reports/openapi/

      - name: Code Coverage Report
        uses: irongut/CodeCoverageSummary@v1.3.0
        with:
          filename: reports/openapi/openapi-coverage.xml
          badge: false
          fail_below_min: false
          format: markdown
          hide_branch_rate: false
          hide_complexity: true
          indicators: true
          output: both
          thresholds: '60 80'

      - name: Move Code Coverage Report
        run: |
          mv code-coverage-results.md reports/openapi/code-coverage-report.md

      - name: Add Coverage PR Comment
        uses: marocchino/sticky-pull-request-comment@v2
        if: github.event_name == 'pull_request'
        with:
          header: 'swagger-sync-coverage-report'
          recreate: true
          path: reports/openapi/code-coverage-report.md

      - name: Upload OpenAPI reports artifact
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: openapi-reports
          path: ${{github.workspace}}/reports/
          if-no-files-found: warn
