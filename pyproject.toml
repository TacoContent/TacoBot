[build-system]
requires = ["setuptools>=67", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "tacobot"
version = "0.0.0"
description = "TacoBot application (Discord bot + HTTP API)"
authors = [
  { name = "TacoBot Maintainers" }
]
readme = "README.md"
license = { text = "MIT" }
requires-python = ">=3.10,<3.14"
# Converted from setup/requirements.txt using compatible specifiers
# Original lines with ~= translated to an explicit lower/upper bound range.
# Commented-out packages in requirements are omitted.

dependencies = [
  "aiohttp>=3.13.1,<3.14.0",
  "discord.py>=2.6.4,<2.7.0",
  "discordhealthcheck>=0.1.1,<0.2.0",
  "mcstatus>=12.0.5,<12.1.0",
  "openai>=2.6.1,<2.7.0",
  "prometheus-client>=0.23.1,<0.24.0",
  "pymongo>=4.15.3,<4.16.0",
  "python-dotenv>=1.1.1,<1.2.0",
  "pytz>=2025.2,<2026.0",
  "pyyaml>=6.0,<7.0",
  "requests>=2.32.5,<2.33.0",
  "validators>=0.35.0,<0.36.0",
]

[project.optional-dependencies]
# Development / testing toolchain (install via: pip install -e .[dev])
dev = [
  "pytest>=8.0.0,<9.0.0",
  "pytest-asyncio>=0.23.0,<0.24.0",
  "pytest-cov>=4.1.0,<5.0.0",
  "mypy>=1.10.0,<2.0.0",
  "ruff>=0.6.0,<0.7.0",
  "black>=25.9.0,<26.0.0",
  "isort>=7.0.0,<8.0.0",
  "types-requests",
  "types-PyYAML",
  "coverage>=7.11.0,<8.0.0",
]
# Dependencies needed for building documentation (install via: pip install -e .[docs])
docs = [
  "ruamel.yaml>=0.18.0,<0.19.0",
  "jsonschema>=4.25.0,<5.0.0",
]

[tool.setuptools.packages.find]
where = ["bot"]
include = ["bot*"]

[tool.tacobot]
# Custom section for documentation about environment management.
# To create and activate the virtual environment:
#   python -m venv .venv
#   (Windows PowerShell) .venv\\Scripts\\Activate.ps1
#   pip install -e .
# Or to use the legacy requirements file directly:
#   pip install -r setup/requirements.txt

[tool.pytest.ini_options]
minversion = "8.0"
addopts = "-ra -q"
testpaths = ["tests"]
asyncio_mode = "auto"

[tool.coverage.run]
branch = true
source = ["bot"]
#   "httpserver",
#   "metrics",
#   "scripts",
# ]
omit = [
  "bot/**/__main__.py",
  "bot/**/migrations/*",
  # "$TEMPDIR/*",
]

[tool.coverage.report]
show_missing = true
skip_covered = true
exclude_lines = [
  "pragma: no cover",
  "if __name__ == '__main__':",
]

[tool.ruff]
line-length = 120
target-version = "py313"
src = ["bot"]

[tool.black]
line-length = 120
target-version = ["py310", "py311", "py312", "py313"]
skip-string-normalization = true
skip-magic-trailing-comma = true
verbose = true
diff = true
check = true
color = true
exclude = '''
/(
    \.git
  | tests
  | \.mypy_cache
  | \.venv
  | _build
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
py_version = 313
line_length = 120
skip = [".gitignore", ".dockerignore"]
skip_glob = [".vscode/**", "tests/**"]
ignore_comments = true
skip_gitignore = true
treat_all_comments_as_code = false
use_parentheses = true
multi_line_output = 3
include_trailing_comma = true
verbose = true
